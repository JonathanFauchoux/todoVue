{"remainingRequest":"/Users/jfa/Desktop/todoVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jfa/Desktop/todoVue/src/components/blocks/carousel/Carousel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jfa/Desktop/todoVue/src/components/blocks/carousel/Carousel.vue","mtime":1557923440466},{"path":"/Users/jfa/Desktop/todoVue/node_modules/cache-loader/dist/cjs.js","mtime":1557923144792},{"path":"/Users/jfa/Desktop/todoVue/node_modules/babel-loader/lib/index.js","mtime":1557923144697},{"path":"/Users/jfa/Desktop/todoVue/node_modules/cache-loader/dist/cjs.js","mtime":1557923144792},{"path":"/Users/jfa/Desktop/todoVue/node_modules/vue-loader/lib/index.js","mtime":1557923148118}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  name: 'Carousel',\n  data () {\n    return {\n      index: 0,\n      slides: this.$children,\n      direction: 'right'\n    }\n  },\n  watch: {\n    slides (slides) {\n      if (this.index >= this.slidesCount) {\n        this.index = this.slidesCount - 1\n      }\n    }\n  },\n\n  computed: {\n    slidesCount () {\n      return this.slides.length\n    }\n  },\n\n  methods: {\n    next () {\n      this.index++\n      this.direction = 'right'\n      if (this.index >= this.slidesCount) {\n        this.index = 0\n      }\n    },\n    prev () {\n      this.index--\n      this.direction = 'left'\n      if (this.index < 0) {\n        this.index = this.slidesCount - 1\n      }\n    },\n    goto (index) {\n      this.direction = index > this.index ? 'right' : 'left'\n      this.index = index\n    }\n  }\n}\n",{"version":3,"sources":["Carousel.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Carousel.vue","sourceRoot":"src/components/blocks/carousel","sourcesContent":["<template>\n  <section class=\"carousel\">\n    <slot></slot>\n    <button class=\"carousel__nav carousel__prev\" @click.prevent=\"prev\"></button>\n    <button class=\"carousel__nav carousel__next\" @click.prevent=\"next\"></button>\n    <div class=\"carousel__pagination\">\n      <button v-for=\"n in slidesCount\" :key=\"n.index\" @click=\"goto(n-1)\" :class=\"{active: n-1 == index}\"></button>\n    </div>\n  </section>\n</template>\n\n<script>\n\nexport default {\n  name: 'Carousel',\n  data () {\n    return {\n      index: 0,\n      slides: this.$children,\n      direction: 'right'\n    }\n  },\n  watch: {\n    slides (slides) {\n      if (this.index >= this.slidesCount) {\n        this.index = this.slidesCount - 1\n      }\n    }\n  },\n\n  computed: {\n    slidesCount () {\n      return this.slides.length\n    }\n  },\n\n  methods: {\n    next () {\n      this.index++\n      this.direction = 'right'\n      if (this.index >= this.slidesCount) {\n        this.index = 0\n      }\n    },\n    prev () {\n      this.index--\n      this.direction = 'left'\n      if (this.index < 0) {\n        this.index = this.slidesCount - 1\n      }\n    },\n    goto (index) {\n      this.direction = index > this.index ? 'right' : 'left'\n      this.index = index\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .carousel{\n    height: 100%;\n    position: relative;\n    overflow: hidden;\n\n    &__nav{\n\n    }\n    &__next{\n      @include icon(icons(chevron-right), after);\n      padding: 1.5rem;\n      background-color: rgba(88,68,248, 0.4);\n      border: 1px solid lightgray;\n      border-radius: 1rem;\n      font-weight: bold;\n      color: white;\n      position: absolute;\n      right: 1rem;\n      top: 70%;\n\n    }\n    &__prev{\n      @include icon(icons(chevron-left), after);\n      padding: 1.5rem;\n      background-color: rgba(88,68,248, 0.4);\n      border: 1px solid lightgray;\n      border-radius: 1rem;\n      font-weight: bold;\n      color: white;\n      position: absolute;\n      top: 70%;\n      left: 1rem;\n\n    }\n    &__pagination{\n      position: absolute;\n      bottom: 1rem;\n      left: 0;\n      right: 0;\n      text-align: center;\n      button{\n        display: inline-block;\n        width: 1rem;\n        height: 1rem;\n        background-color: #000;\n        opacity: .7;\n        border-radius: 50%;\n        margin: 0 2px;\n\n      }\n      .active{\n          background-color: #fff;\n        }\n    }\n  }\n</style>\n"]}]}